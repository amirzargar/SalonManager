@model SalonManager.Models.Booking
@using Microsoft.AspNetCore.Identity
@{
    ViewData["Title"] = "Create Booking";
    bool isAdmin = User.IsInRole("Admin");
}

<h1>Create Booking</h1>
<h4>Booking Details</h4>
<hr />

<div class="row">
    <div class="col-md-6">

        @* Display success or error messages from TempData *@
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">@TempData["SuccessMessage"]</div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
        }

        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            @* Only Admin can select the Customer; Customers get assigned automatically in backend *@
            @if (isAdmin && ViewBag.Customers != null)
            {
                <div class="form-group mb-3">
                    <label asp-for="CustomerId" class="form-label"></label>
                    <select asp-for="CustomerId" class="form-control" asp-items="ViewBag.Customers">
                        <option value="">-- Select Customer --</option>
                    </select>
                    <span asp-validation-for="CustomerId" class="text-danger"></span>
                </div>
            }

            <div class="form-group mb-3">
                <label asp-for="ServiceId" class="form-label"></label>
                <select asp-for="ServiceId" class="form-control" asp-items="ViewBag.Services">
                    <option value="">-- Select Service --</option>
                </select>
                <span asp-validation-for="ServiceId" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="StaffId" class="form-label"></label>
                <select asp-for="StaffId" class="form-control" asp-items="ViewBag.Staffs">
                    <option value="">-- Select Staff (optional) --</option>
                </select>
                <span asp-validation-for="StaffId" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="StartAt" class="form-label"></label>
                <input asp-for="StartAt" type="datetime-local" class="form-control" />
                <span asp-validation-for="StartAt" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="EndAt" class="form-label"></label>
                <input asp-for="EndAt" type="datetime-local" class="form-control" />
                <span asp-validation-for="EndAt" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                @if (User.IsInRole("Admin"))
                {
                    <select asp-for="Status" class="form-control">
                        @foreach (var status in Enum.GetValues(typeof(SalonManager.Models.BookingStatus)))
                        {
                            <option value="@status">@status</option>
                        }
                    </select>
                }
                else
                {
                    <input type="text" readonly class="form-control" value="Pending" />
                    <input type="hidden" asp-for="Status" value="Pending" />
                }

            </div>

            <div class="form-group mb-3">
                <label asp-for="Notes" class="form-label"></label>
                <textarea asp-for="Notes" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Notes" class="text-danger"></span>
            </div>

            <button type="submit" class="btn btn-primary">Create</button>
        </form>
    </div>
</div>

<div class="mt-3">
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
